//=======================================================
// Mixins
//=======================================================

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Helper function for working with Sass maps.
// Example: @include print($configuration);
@mixin print($declarations) {
  @each $property, $value in $declarations {
    #{$property}: $value;
  }
}

// Mixin for standard buttons
@mixin button($hover-color: $color-grass, $background: $color-grass, $color: $color-white, $padding: 0.8rem $padding-sm, $corners: $border-rd-md) {
  display: inline-block;
  padding: 4px 12px;
  margin-bottom: 5px;
  font-size: 14px;
  line-height: 20px;
  color: $color-white;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  background-color: $color-grass;
  border: 1px solid $color-charcoal;
  text-decoration: none;
  border-radius: $border-rd-sm;
  text-transform: capitalize;

  &:hover,
  &:focus {
    background-color: $color-grass;
    border: 1px solid $color-charcoal;
    color: $color-white;
  }
}

@mixin outline-shadow {
  box-shadow: $shadow-sm,
              inset $shadow-sm;
}

@mixin box-shadow {
  box-shadow: $shadow-sm;
}

@mixin box-shadow-large {
  box-shadow: $shadow-lg;
}

@mixin text-shadow {
  text-shadow: $shadow-sm;
}

// vertical align mixin
@mixin vertical-align($position: relative) {
  display: block;
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

// horizontal align mixin
@mixin horizontal-align($position: relative) {
  display: inline-block;
  left: 50%;
  position: $position;
  transform: translateX(-50%);
}

// center align mixin
@mixin center-align($position: relative) {
  display: block;
  left: 50%;
  position: $position;
  top: 50%;
  transform: translate(-50%, -50%);
}

// allows to add opacity overlay to elements
@mixin opacity-overlay($opacity, $color: $color-black, $top: 0) {
  &::before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    position: absolute;
    top: $top;
    left: 0;
    background: $color;
    opacity: $opacity;
    z-index: $zi-lowest;
  }
}
